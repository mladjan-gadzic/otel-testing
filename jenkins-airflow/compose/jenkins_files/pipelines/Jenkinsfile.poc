@Library('test-lib') _

node {

  stage('Start') {
    steps {
      script {
        // Get memory usage at the start
        def runtime = Runtime.getRuntime()
        def startUsedMem = (runtime.totalMemory() - runtime.freeMemory()) / (1024 * 1024)
        echo "Initial memory usage: ${startUsedMem} MB"
      }
    }
  }

  stage('prepare') {
    steps {
      bunchOfSteps(0)
    }
  }

  // stage('Build and Test') {
  //   build.runHadoopBuild(false)
  //   test.runHadoopTests(false)
  // }

  // stage('Build and Test with user-defined spans') {
  //   build.runHadoopBuild(true)
  //   test.runHadoopTests(true)
  // }

  stage('End') {
    steps {
      script {
        // Get memory usage at the end
        def runtime = Runtime.getRuntime()
        def endUsedMem = (runtime.totalMemory() - runtime.freeMemory()) / (1024 * 1024)
        echo "Final memory usage: ${endUsedMem} MB"
      }
    }
  }
}

def bunchOfSteps(level) {
  if (level < 500) {
    withNewSpan(label: 'custom-build-span-' + level, attributes: ([
        spanAttribute(key: 'level', value: level),
        ]), setAttributesOnlyOnParent: true) {
      sh "echo level ${level}"
      bunchOfSteps(level + 1)
    }
  }
}
version: '3.7'

x-airflow-common:
  &airflow-common
  environment:
    AIRFLOW__CORE__EXECUTOR: "CeleryExecutor"
    AIRFLOW__CELERY__BROKER_URL: "redis://redis:6379/0"
    AIRFLOW__CELERY__RESULT_BACKEND: "db+postgresql://airflow:airflow@postgres:5432/airflow"
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres:5432/airflow"
    AIRFLOW__CORE__FERNET_KEY: "67kYTqhoGE83KLRtd2XpEmiSYRxD7mbtsevG-Jx9MNo="
    AIRFLOW__METRICS__OTEL_ON: "True"
    AIRFLOW__METRICS__OTEL_HOST: "otel-collector"
    AIRFLOW__METRICS__OTEL_PORT: "4318"
    AIRFLOW__METRICS__OTEL_INTERVAL_MILLISECONDS: "30000"
    AIRFLOW__TRACES__OTEL_ON: "True"
    AIRFLOW__TRACES__OTEL_HOST: "otel-collector"
    AIRFLOW__TRACES__OTEL_PORT: "4318"
    AIRFLOW__TRACES__OTEL_DEBUGGING_ON: "False"
    AIRFLOW__TRACES__OTEL_TASK_LOG_EVENT: "True"
    AIRFLOW__WEBSERVER__SECRET_KEY: "generated_secret_key"
  networks:
    - monitoring
  # restart: always

services:
  # Jenkins Service
  jenkins:
    build:
      context: ./jenkins_files
      dockerfile: Dockerfile.jenkins
      args:
        USE_CUSTOM_JENKINS_WAR: "${USE_CUSTOM_WAR}"
    container_name: jenkins
    hostname: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
      - "2002:2002"
    volumes:
      - ./jenkins_files/jenkins-config.yml:/var/jenkins_home/casc_configs/jenkins-config.yml
      # Mount the entire pipeline dir.
      - ./jenkins_files/pipelines:/var/jenkins_home/pipelines
      - ./jenkins_files/shared-libraries:/var/jenkins_home/shared-libraries
      - ./jenkins_files/init.groovy.d:/var/jenkins_home/init.groovy.d
    environment:
      JAVA_OPTS: "-Duser.timezone=Etc/UTC -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:2002"
      # Path to JCasC config
      CASC_JENKINS_CONFIG: "/var/jenkins_home/casc_configs/jenkins-config.yml"
    # use user 'root' to have enough permissions for the entrypoint.sh
    # user: root
    networks:
      - monitoring
    restart: always

  # OpenTelemetry Collector Service
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    hostname: otel-collector
    ports:
      - "4317:4317"  # For gRPC (OTLP)
      # - "4318:4318"
      - "24318:4318"    # OTLP http receiver
      - "28889:8889"    # Prometheus exporter metrics
    volumes:
      - ./config/otel-config.yml:/etc/otel/config.yml
    command: ["--config", "/etc/otel/config.yml"]
    networks:
      - monitoring
    restart: always

  # Jaeger Service
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    hostname: jaeger
    environment:
      COLLECTOR_OTLP_ENABLED: true
      COLLLECTOR_ZIPKIN_HOST_PORT: 9411
    ports:
      - "16686:16686"  # Jaeger UI
      - "14250:14250"  # gRPC endpoint for trace ingestion
      - "14268:14268"  # HTTP endpoint for trace ingestion
      - "34317:4317"
      - "34318:4318"
      - "39422:9422"
    networks:
      - monitoring
    restart: always

  # Prometheus Service
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring
    restart: always

  # Grafana Service
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - monitoring
    restart: always

  # Airflow Service
  airflow-webserver:
    build:
      context: ./airflow_files
      dockerfile: Dockerfile.airflow
    container_name: airflow-webserver
    hostname: airflow-webserver
    entrypoint: ["/opt/airflow/entrypoint.sh"]
    command: ["airflow", "webserver"]
    depends_on:
      - airflow-scheduler1
      - airflow-scheduler2
      - airflow-worker
      - airflow-init
    ports:
      - "8081:8080"   # Airflow web UI
      # - "3003:3003"   # Debugger
    volumes:
      - ./airflow_files/dags:/opt/airflow/dags
      - ./airflow_files/plugins:/opt/airflow/plugins
      - ./airflow_files/airflow.cfg:/opt/airflow/airflow.cfg
      - ./airflow_files/airflow-web-entrypoint.sh:/opt/airflow/entrypoint.sh
    <<: *airflow-common

  airflow-scheduler1:
    build:
      context: ./airflow_files
      dockerfile: Dockerfile.airflow
    container_name: airflow-scheduler1
    command: ["airflow", "scheduler"]
    depends_on:
      - airflow-init
    # ports:
    #   - "4004:4004"   # Debugger
    volumes:
      - ./airflow_files/dags:/opt/airflow/dags
      - ./airflow_files/plugins:/opt/airflow/plugins
      - ./airflow_files/airflow.cfg:/opt/airflow/airflow.cfg
    <<: *airflow-common

  airflow-scheduler2:
    build:
      context: ./airflow_files
      dockerfile: Dockerfile.airflow
    container_name: airflow-scheduler2
    command: ["airflow", "scheduler"]
    depends_on:
      - airflow-init
    # ports:
    #   - "4004:4004"   # Debugger
    volumes:
      - ./airflow_files/dags:/opt/airflow/dags
      - ./airflow_files/plugins:/opt/airflow/plugins
      - ./airflow_files/airflow.cfg:/opt/airflow/airflow.cfg
    <<: *airflow-common

  airflow-worker:
    build:
      context: ./airflow_files
      dockerfile: Dockerfile.airflow
    container_name: airflow-worker
    command: ["airflow", "celery", "worker"]
    depends_on:
      - airflow-scheduler1
      - airflow-scheduler2
      - airflow-init
    # ports:
    #   - "5005:5005"   # Debugger
    volumes:
      - ./airflow_files/dags:/opt/airflow/dags
      - ./airflow_files/plugins:/opt/airflow/plugins
      - ./airflow_files/airflow.cfg:/opt/airflow/airflow.cfg
    <<: *airflow-common

  airflow-init:
    build:
      context: ./airflow_files
      dockerfile: Dockerfile.airflow
    container_name: airflow-init
    command: ["airflow", "db", "migrate"]
    volumes:
      - ./airflow_files/airflow.cfg:/opt/airflow/airflow.cfg
    <<: *airflow-common

  # Redis Service for Celery
  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    ports:
      - "6379:6379"
    networks:
      - monitoring
    restart: always

  # Postgres Service for Airflow Metadata
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - monitoring
    restart: always

  # Aspire Dashboard Service
  aspire-dashboard:
    image: mcr.microsoft.com/dotnet/aspire-dashboard:8.1.0
    container_name: aspire-dashboard
    hostname: aspire-dashboard
    environment:
      - DOTNET_DASHBOARD_UNSECURED_ALLOW_ANONYMOUS=true
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
    ports:
      - "18888:18888"   # Dashboard web UI
      - "14317:18889"   # OTLP gRPC listener
      - "14318:18890"   # OTLP HTTP listener
    networks:
      - monitoring
    depends_on:
      - otel-collector

volumes:
  jenkins_home:
  grafana_data:
  postgres_data:

networks:
  monitoring:
    driver: bridge

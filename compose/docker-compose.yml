version: '3.7'

services:
  # Jenkins Service
  jenkins:
    build:
      context: ./jenkins_files
      dockerfile: Dockerfile.jenkins
    container_name: jenkins
    hostname: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - ./jenkins_files/jenkins-config.yml:/var/jenkins_home/casc_configs/jenkins-config.yml
      # Mount the entire pipeline dir.
      - ./jenkins_files/pipelines:/var/jenkins_home/pipelines
      - ./jenkins_files/shared-libraries:/var/jenkins_home/shared-libraries
      - ./jenkins_files/init.groovy.d:/var/jenkins_home/init.groovy.d
    environment:
      JAVA_OPTS: "-Duser.timezone=Etc/UTC"
      # Path to JCasC config
      CASC_JENKINS_CONFIG: "/var/jenkins_home/casc_configs/jenkins-config.yml"
    # use user 'root' to have enough permissions for the entrypoint.sh
    # user: root
    networks:
      - monitoring
    restart: always

  # OpenTelemetry Collector Service
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    hostname: otel-collector
    ports:
      - "4317:4317"  # For gRPC (OTLP)
      - "4318:4318"
    volumes:
      - ./config/otel-config.yml:/etc/otel/config.yml
    command: ["--config", "/etc/otel/config.yml"]
    networks:
      - monitoring
    restart: always

  # Jaeger Service
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    hostname: jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "14250:14250"  # gRPC endpoint for trace ingestion
      - "14268:14268"  # HTTP endpoint for trace ingestion
      - "4317"
    networks:
      - monitoring
    restart: always

  # Prometheus Service
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring
    restart: always

  # Grafana Service
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - monitoring
    restart: always

volumes:
  jenkins_home:
  grafana_data:

networks:
  monitoring:
    driver: bridge
